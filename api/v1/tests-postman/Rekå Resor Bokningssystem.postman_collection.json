{
	"info": {
		"_postman_id": "c163b8c0-ccdd-40f5-9a3c-5a8a4f9de119",
		"name": "Rek√• Resor Bokningssystem",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "timestamp",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1a4e06f1-ace6-485d-b6cd-43e3a94d627a",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"response must be valid and have a body\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.json;",
							"    pm.response.to.be.withBody;",
							"    pm.response.to.not.have.jsonBody(\"error\"); ",
							"});",
							"",
							"pm.test(\"body contains valid timestamp\", function () { ",
							"    pm.expect(pm.response.json().servertime).to.be.a('number')",
							"});",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "X-API-Key",
						"value": "{{APIKey}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{BaseURL}}timestamp",
					"host": [
						"{{BaseURL}}timestamp"
					]
				},
				"description": "Get servertime"
			},
			"response": []
		},
		{
			"name": "users/auth Don't send a username",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "10c3d648-40cd-41c1-8f33-8e5ada1e0336",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "cb9e6712-0bf7-413f-8b35-e8dce7da1721",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 401 and body contains error\", function () {",
							"    pm.response.to.have.status(401);",
							"    pm.response.to.be.json;",
							"    pm.response.to.be.withBody;",
							"    pm.response.to.have.jsonBody(\"error\"); ",
							"});",
							"",
							"pm.test(\"WWW-Authenticate is present\", function () {",
							"    pm.response.to.have.header(\"WWW-Authenticate\");",
							"});"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{Pwd}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "X-API-Key",
						"value": "{{APIKey}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{BaseURL}}users/auth",
					"host": [
						"{{BaseURL}}users"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "users/auth Don't send a password",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "10c3d648-40cd-41c1-8f33-8e5ada1e0336",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "cb9e6712-0bf7-413f-8b35-e8dce7da1721",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 401 and body contains error\", function () {",
							"    pm.response.to.have.status(401);",
							"    pm.response.to.be.json;",
							"    pm.response.to.be.withBody;",
							"    pm.response.to.have.jsonBody(\"error\"); ",
							"});",
							"",
							"pm.test(\"WWW-Authenticate is present\", function () {",
							"    pm.response.to.have.header(\"WWW-Authenticate\");",
							"});"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{Username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "X-API-Key",
						"value": "{{APIKey}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{BaseURL}}users/auth",
					"host": [
						"{{BaseURL}}users"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "users/auth Wrong credentials",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "10c3d648-40cd-41c1-8f33-8e5ada1e0336",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "cb9e6712-0bf7-413f-8b35-e8dce7da1721",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 401 and body contains error\", function () {",
							"    pm.response.to.have.status(401);",
							"    pm.response.to.be.json;",
							"    pm.response.to.be.withBody;",
							"    pm.response.to.have.jsonBody(\"error\"); ",
							"});",
							"",
							"pm.test(\"WWW-Authenticate is present\", function () {",
							"    pm.response.to.have.header(\"WWW-Authenticate\");",
							"});"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "fake",
							"type": "string"
						},
						{
							"key": "username",
							"value": "fake",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "X-API-Key",
						"value": "{{APIKey}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{BaseURL}}users/auth",
					"host": [
						"{{BaseURL}}users"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "users/auth AutoUser Login",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "10c3d648-40cd-41c1-8f33-8e5ada1e0336",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "aee6c27a-2d67-4ca6-a629-4fbb3c078835",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 202 and json body returned\", function () {",
							"    pm.response.to.have.status(202);",
							"    pm.response.to.be.json;",
							"    pm.response.to.be.withBody;",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"",
							"postman.setEnvironmentVariable(\"AccessJWT\", jsonData.access.token)",
							"postman.setEnvironmentVariable(\"RefreshJWT\", jsonData.refresh.token)",
							"",
							"",
							"var schema = {",
							"\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
							"\"type\" : \"object\",",
							"  \"properties\": {",
							"    \"saved\": { ",
							"        \"type\": \"boolean\"",
							"    },",
							"    \"login\": { ",
							"        \"type\": \"boolean\",",
							"        \"enum\": [true]",
							"    },",
							"    \"success\": { ",
							"        \"type\": \"boolean\"",
							"    },",
							"    \"response\": { ",
							"        \"type\": \"string\"",
							"    },",
							"    \"access\": { ",
							"        \"type\": \"object\",",
							"        \"required\": [ \"token\", \"expires\"],",
							"        \"properties\": {",
							"            \"token\": {",
							"                \"type\": \"string\"",
							"            },",
							"            \"expires\": {",
							"                \"type\": \"number\"",
							"            }",
							"        }",
							"    },",
							"    \"refresh\": { ",
							"        \"type\": \"object\",",
							"        \"required\": [ \"token\", \"expires\"],",
							"        \"properties\": {",
							"            \"token\": {",
							"                \"type\": \"string\"",
							"            },",
							"            \"expires\": {",
							"                \"type\": \"number\"",
							"            }",
							"        }",
							"    }",
							"  ",
							"},",
							"\"required\": [ \"login\", \"refresh\", \"access\", \"response\"]",
							"};",
							"",
							"",
							"pm.test('Schema is valid', function() {",
							"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{Pwd}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{Username}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "X-API-Key",
						"value": "{{APIKey}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{BaseURL}}users/auth",
					"host": [
						"{{BaseURL}}users"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "users/auth/refresh Refresh",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "10c3d648-40cd-41c1-8f33-8e5ada1e0336",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "1a10e414-5934-4f67-95f6-8eeedec81370",
						"type": "text/javascript",
						"exec": [
							"",
							"",
							"",
							"pm.test(\"Status code is 202 and json body returned\", function () {",
							"    pm.response.to.have.status(202);",
							"    pm.response.to.be.json;",
							"    pm.response.to.be.withBody;",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"",
							"postman.setEnvironmentVariable(\"AccessJWT\", jsonData.access.token)",
							"postman.setEnvironmentVariable(\"RefreshJWT\", jsonData.refresh.token)",
							"",
							"",
							"var schema = {",
							"\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
							"\"type\" : \"object\",",
							"  \"properties\": {",
							"    \"servertime\": {",
							"      \"type\": \"number\"  ",
							"    },",
							"    \"saved\": { ",
							"        \"type\": \"boolean\"",
							"    },",
							"    \"login\": { ",
							"        \"type\": \"boolean\",",
							"        \"enum\": [true]",
							"    },",
							"    \"success\": { ",
							"        \"type\": \"boolean\"",
							"    },",
							"    \"response\": { ",
							"        \"type\": \"string\"",
							"    },",
							"    \"access\": { ",
							"        \"type\": \"object\",",
							"        \"required\": [ \"token\", \"expires\"],",
							"        \"properties\": {",
							"            \"token\": {",
							"                \"type\": \"string\"",
							"            },",
							"            \"expires\": {",
							"                \"type\": \"number\"",
							"            }",
							"        }",
							"    },",
							"    \"refresh\": { ",
							"        \"type\": \"object\",",
							"        \"required\": [ \"token\", \"expires\"],",
							"        \"properties\": {",
							"            \"token\": {",
							"                \"type\": \"string\"",
							"            },",
							"            \"expires\": {",
							"                \"type\": \"number\"",
							"            }",
							"        }",
							"    }",
							"  ",
							"},",
							"\"required\": [ \"login\", \"refresh\", \"access\", \"response\", \"servertime\"]",
							"};",
							"",
							"",
							"",
							"",
							"",
							"pm.test('Schema is valid', function() {",
							"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{RefreshJWT}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "X-API-Key",
						"value": "{{APIKey}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"user\": \"{{Username}}\"\n}"
				},
				"url": {
					"raw": "{{BaseURL}}users/auth/refresh",
					"host": [
						"{{BaseURL}}users"
					],
					"path": [
						"auth",
						"refresh"
					]
				}
			},
			"response": []
		},
		{
			"name": "users/auth/refresh Refresh invalid",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "10c3d648-40cd-41c1-8f33-8e5ada1e0336",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "3978082a-7da3-4cd3-b681-773cda0a74e2",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 401 and body contains error\", function () {",
							"    pm.response.to.have.status(401);",
							"    pm.response.to.be.json;",
							"    pm.response.to.be.withBody;",
							"    pm.response.to.have.jsonBody(\"error\"); ",
							"});",
							"",
							"pm.test(\"WWW-Authenticate is present\", function () {",
							"    pm.response.to.have.header(\"WWW-Authenticate\");",
							"});"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "invalid",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "X-API-Key",
						"value": "{{APIKey}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"user\": \"{{Username}}\"\n}"
				},
				"url": {
					"raw": "{{BaseURL}}users/auth/refresh",
					"host": [
						"{{BaseURL}}users"
					],
					"path": [
						"auth",
						"refresh"
					]
				}
			},
			"response": []
		},
		{
			"name": "users/auth/revoke Revoke",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "10c3d648-40cd-41c1-8f33-8e5ada1e0336",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "3978082a-7da3-4cd3-b681-773cda0a74e2",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 401 and body contains error\", function () {",
							"    pm.response.to.have.status(401);",
							"    pm.response.to.be.json;",
							"    pm.response.to.be.withBody;",
							"    pm.response.to.have.jsonBody(\"error\"); ",
							"});",
							"",
							"pm.test(\"WWW-Authenticate is present\", function () {",
							"    pm.response.to.have.header(\"WWW-Authenticate\");",
							"});"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "invalid",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "X-API-Key",
						"value": "{{APIKey}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"user\": \"{{Username}}\"\n}"
				},
				"url": {
					"raw": "{{BaseURL}}users/auth/revoke",
					"host": [
						"{{BaseURL}}users"
					],
					"path": [
						"auth",
						"revoke"
					]
				}
			},
			"response": []
		},
		{
			"name": "tours/tours Check failed request auth",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "10c3d648-40cd-41c1-8f33-8e5ada1e0336",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "f91497e2-cdfb-4a4a-bbb1-f05c8e7f3f1c",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"",
							"",
							"pm.test(\"Login is false\", function () {",
							"    var jsonData = pm.response.json();",
							"    console.log(jsonData.login)",
							"    pm.expect(jsonData.login).to.eql(false);",
							"});",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "none",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "X-API-Key",
						"value": "{{APIKey}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{BaseURL}}tours",
					"host": [
						"{{BaseURL}}tours"
					]
				}
			},
			"response": []
		},
		{
			"name": "users/auth AutoUser Log back in after revoke test",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "10c3d648-40cd-41c1-8f33-8e5ada1e0336",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "aee6c27a-2d67-4ca6-a629-4fbb3c078835",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 202 and json body returned\", function () {",
							"    pm.response.to.have.status(202);",
							"    pm.response.to.be.json;",
							"    pm.response.to.be.withBody;",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"",
							"postman.setEnvironmentVariable(\"AccessJWT\", jsonData.access.token)",
							"postman.setEnvironmentVariable(\"RefreshJWT\", jsonData.refresh.token)",
							"",
							"",
							"var schema = {",
							"\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
							"\"type\" : \"object\",",
							"  \"properties\": {",
							"    \"saved\": { ",
							"        \"type\": \"boolean\"",
							"    },",
							"    \"login\": { ",
							"        \"type\": \"boolean\",",
							"        \"enum\": [true]",
							"    },",
							"    \"success\": { ",
							"        \"type\": \"boolean\"",
							"    },",
							"    \"response\": { ",
							"        \"type\": \"string\"",
							"    },",
							"    \"access\": { ",
							"        \"type\": \"object\",",
							"        \"required\": [ \"token\", \"expires\"],",
							"        \"properties\": {",
							"            \"token\": {",
							"                \"type\": \"string\"",
							"            },",
							"            \"expires\": {",
							"                \"type\": \"number\"",
							"            }",
							"        }",
							"    },",
							"    \"refresh\": { ",
							"        \"type\": \"object\",",
							"        \"required\": [ \"token\", \"expires\"],",
							"        \"properties\": {",
							"            \"token\": {",
							"                \"type\": \"string\"",
							"            },",
							"            \"expires\": {",
							"                \"type\": \"number\"",
							"            }",
							"        }",
							"    }",
							"  ",
							"},",
							"\"required\": [ \"login\", \"refresh\", \"access\", \"response\"]",
							"};",
							"",
							"",
							"pm.test('Schema is valid', function() {",
							"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{Pwd}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{Username}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "X-API-Key",
						"value": "{{APIKey}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{BaseURL}}users/auth",
					"host": [
						"{{BaseURL}}users"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "tours/tours Check logged in succesfull",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "10c3d648-40cd-41c1-8f33-8e5ada1e0336",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "3a22b319-8d71-4ecf-93b6-29a19eafe794",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{AccessJWT}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "X-API-Key",
						"value": "{{APIKey}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{BaseURL}}categories",
					"host": [
						"{{BaseURL}}categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "categories Add Category Test",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "10c3d648-40cd-41c1-8f33-8e5ada1e0336",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "4399e3dc-1d63-4fd8-af97-619cf4c729ff",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 201 and json body exists\", function () {",
							"    pm.response.to.have.status(201);",
							"    pm.response.to.be.json;",
							"    pm.response.to.be.withBody;",
							"});",
							"",
							"pm.test(\"login true, success true\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.login).to.eql(true);",
							"    pm.expect(jsonData.success).to.eql(true);",
							"});",
							"",
							"",
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"testIDCategory1\", jsonData.response.updatedid);",
							""
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{AccessJWT}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "X-API-Key",
						"value": "{{APIKey}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"label\": \"PostmanTestCategory\",\n\t\"active\": false\n}"
				},
				"url": {
					"raw": "{{BaseURL}}categories",
					"host": [
						"{{BaseURL}}categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "categories Add Anoter Category",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "10c3d648-40cd-41c1-8f33-8e5ada1e0336",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "ecc56d51-28ac-4db0-8719-c55e3b06a5ce",
						"exec": [
							"pm.test(\"Status code is 201 and json body exists\", function () {",
							"    pm.response.to.have.status(201);",
							"    pm.response.to.be.json;",
							"    pm.response.to.be.withBody;",
							"});",
							"",
							"pm.test(\"login true, success true\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.login).to.eql(true);",
							"    pm.expect(jsonData.success).to.eql(true);",
							"});",
							"",
							"",
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"testIDCategory2\", jsonData.response.updatedid);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{AccessJWT}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "X-API-Key",
						"value": "{{APIKey}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"label\": \"AnotherTestCategory\",\n\t\"isDisabled\": true\n}"
				},
				"url": {
					"raw": "{{BaseURL}}categories",
					"host": [
						"{{BaseURL}}categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "categories Get Categories Test",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "10c3d648-40cd-41c1-8f33-8e5ada1e0336",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "7d5ab9bd-efa3-4a39-bf1d-c6416999bebd",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200 and json body exists\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.json;",
							"    pm.response.to.be.withBody;",
							"});",
							"",
							"var schema = {",
							"\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
							"\"type\" : \"object\",",
							"  \"properties\": {",
							"    \"login\": { ",
							"        \"type\": \"boolean\",",
							"        \"enum\": [true]",
							"    },",
							"    \"success\": { ",
							"        \"type\": \"boolean\",",
							"        \"enum\": [true]",
							"    },",
							"    \"response\": { ",
							"        \"type\": \"object\",",
							"        \"required\": [ \"categories\"],",
							"        \"properties\": {",
							"            \"categories\": {",
							"                \"type\": \"array\"",
							"            }",
							"        }",
							"    }",
							"},",
							"\"required\": [ \"login\", \"success\", \"response\"]",
							"};",
							"",
							"var jsonData = pm.response.json();",
							"",
							"pm.test('Schema is valid', function() {",
							"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{AccessJWT}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "X-API-Key",
						"value": "{{APIKey}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{BaseURL}}categories",
					"host": [
						"{{BaseURL}}categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "categories Edit CategoryName Test",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "10c3d648-40cd-41c1-8f33-8e5ada1e0336",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "12d6597e-15c9-4b2e-94a4-7b8a60213874",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200 and json body exists\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.json;",
							"    pm.response.to.be.withBody;",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"Updated ID returned\", function () {",
							"    pm.expect(jsonData.response.updatedid).to.eql(Number(pm.environment.get('testIDCategory1')));",
							"});",
							"",
							""
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{AccessJWT}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "X-API-Key",
						"value": "{{APIKey}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"label\": \"ReplacedCategoryLabel\"\n}"
				},
				"url": {
					"raw": "{{BaseURL}}categories/{{testIDCategory1}}",
					"host": [
						"{{BaseURL}}categories"
					],
					"path": [
						"{{testIDCategory1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "categories Edit CategoryName Active",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "10c3d648-40cd-41c1-8f33-8e5ada1e0336",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "b6660738-bd6c-4ef8-9233-245350b7a142",
						"exec": [
							"pm.test(\"Status code is 200 and json body exists\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.json;",
							"    pm.response.to.be.withBody;",
							"});",
							"",
							"var schema = {",
							"\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
							"\"type\" : \"object\",",
							"  \"properties\": {",
							"    \"login\": { ",
							"        \"type\": \"boolean\",",
							"        \"enum\": [true]",
							"    },",
							"    \"success\": { ",
							"        \"type\": \"boolean\",",
							"        \"enum\": [true]",
							"    },",
							"    \"response\": { ",
							"        \"type\": \"object\",",
							"        \"required\": [ \"updatedid\"],",
							"        \"properties\": {",
							"            \"updatedid\": {",
							"                \"type\": \"number\"",
							"            }",
							"        }",
							"    }",
							"},",
							"\"required\": [ \"login\", \"success\", \"response\"]",
							"};",
							"",
							"var jsonData = pm.response.json();",
							"",
							"pm.test('Schema is valid', function() {",
							"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{AccessJWT}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "X-API-Key",
						"value": "{{APIKey}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"label\": \"ReplacedCategoryLabel\",\n\t\"isDisabled\": false\n}"
				},
				"url": {
					"raw": "{{BaseURL}}categories/{{testIDCategory1}}",
					"host": [
						"{{BaseURL}}categories"
					],
					"path": [
						"{{testIDCategory1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "categories Get Category Test",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "10c3d648-40cd-41c1-8f33-8e5ada1e0336",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "5a915af0-d57f-4d9d-a6e1-26108ccdd5b7",
						"exec": [
							"pm.test(\"Status code is 200 and json body exists\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.json;",
							"    pm.response.to.be.withBody;",
							"});",
							"",
							"var schema = {",
							"\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
							"\"type\" : \"object\",",
							"  \"properties\": {",
							"    \"login\": { ",
							"        \"type\": \"boolean\",",
							"        \"enum\": [true]",
							"    },",
							"    \"success\": { ",
							"        \"type\": \"boolean\",",
							"        \"enum\": [true]",
							"    },",
							"    \"response\": { ",
							"        \"type\": \"object\",",
							"        \"required\": [ \"categories\"],",
							"        \"properties\": {",
							"            \"categories\": {",
							"                \"type\": \"array\"",
							"            }",
							"        }",
							"    }",
							"},",
							"\"required\": [ \"login\", \"success\", \"response\"]",
							"};",
							"",
							"var jsonData = pm.response.json();",
							"",
							"pm.test('Schema is valid', function() {",
							"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							"",
							"",
							"",
							"pm.test(\"Category Label was changed\", function () {",
							"    pm.expect(jsonData.response.categories[0].label).to.eql(\"ReplacedCategoryLabel\");",
							"});",
							"",
							"pm.test(\"Category was changed to active\", function () {",
							"    pm.expect(jsonData.response.categories[0].isdisabled).to.eql(false);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{AccessJWT}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "X-API-Key",
						"value": "{{APIKey}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{BaseURL}}categories/{{testIDCategory1}}",
					"host": [
						"{{BaseURL}}categories"
					],
					"path": [
						"{{testIDCategory1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "tours Add Tour Test",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "10c3d648-40cd-41c1-8f33-8e5ada1e0336",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "8561c2be-29ef-4700-a814-21fecd16959e",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 201 and json body exists\", function () {",
							"    pm.response.to.have.status(201);",
							"    pm.response.to.be.json;",
							"    pm.response.to.be.withBody;",
							"});",
							"",
							"pm.test(\"login true, success true\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.login).to.eql(true);",
							"    pm.expect(jsonData.success).to.eql(true);",
							"});",
							"",
							"",
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"testIDTour\", jsonData.response.updatedid);",
							""
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{AccessJWT}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "X-API-Key",
						"value": "{{APIKey}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"label\": \"TestTour123\",\n\t\"insuranceprice\": 100,\n\t\"reservationfeeprice\": 100,\n\t\"departuredate\": \"2018-01-01\",\n\t\"categories\": [\n\t\t{\n\t\t\t\"id\": \"{{testIDCategory1}}\"\n\t\t\t\n\t\t},\n\t\t{\n\t\t\t\"id\": \"{{testIDCategory2}}\"\n\t\t\t\n\t\t}\n\t\t],\n\t\"rooms\": [\n\t\t{\n\t\t\t\"label\": \"Enkelrum23\",\n\t\t\t\"price\": 100,\n\t\t\t\"size\": 1,\n\t\t\t\"numberavaliable\": 10\n\t\t},\n\t\t{\n\t\t\t\"label\": \"Dubbelru2m3\",\n\t\t\t\"price\": 200,\n\t\t\t\"size\": 2,\n\t\t\t\"numberavaliable\": 20\n\t\t},\n\t\t{\n\t\t\t\"label\": \"Familjeru23m\",\n\t\t\t\"price\": 400,\n\t\t\t\"size\": 4,\n\t\t\t\"numberavaliable\": 40\n\t\t}\n\t\t]\n}"
				},
				"url": {
					"raw": "{{BaseURL}}tours",
					"host": [
						"{{BaseURL}}tours"
					]
				}
			},
			"response": []
		},
		{
			"name": "tours Get Tours Test",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "10c3d648-40cd-41c1-8f33-8e5ada1e0336",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "4ee2a053-ed9d-45d5-a255-5f454c71195d",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200 and json body exists\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.json;",
							"    pm.response.to.be.withBody;",
							"});",
							"",
							"pm.test(\"login true, success true\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.login).to.eql(true);",
							"    pm.expect(jsonData.success).to.eql(true);",
							"});",
							"",
							"",
							"var jsonData = pm.response.json();",
							"",
							"var schema = {",
							"\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
							"\"type\" : \"object\",",
							"  \"properties\": {",
							"    \"login\": { ",
							"        \"type\": \"boolean\",",
							"        \"enum\": [true]",
							"    },",
							"    \"success\": { ",
							"        \"type\": \"boolean\",",
							"        \"enum\": [true]",
							"    },",
							"    \"response\": { ",
							"        \"type\": \"object\",",
							"        \"required\": [ \"tours\"],",
							"        \"properties\": {",
							"            \"tours\": {",
							"                \"type\": \"array\"",
							"            }",
							"        }",
							"    }",
							"},",
							"\"required\": [ \"login\", \"success\", \"response\"]",
							"};",
							"",
							"pm.test('Schema is valid', function() {",
							"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{AccessJWT}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "X-API-Key",
						"value": "{{APIKey}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{BaseURL}}tours",
					"host": [
						"{{BaseURL}}tours"
					]
				}
			},
			"response": []
		},
		{
			"name": "tours Edit Tour Test",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "10c3d648-40cd-41c1-8f33-8e5ada1e0336",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "8561c2be-29ef-4700-a814-21fecd16959e",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 201 and json body exists\", function () {",
							"    pm.response.to.have.status(201);",
							"    pm.response.to.be.json;",
							"    pm.response.to.be.withBody;",
							"});",
							"",
							"pm.test(\"login true, success true\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.login).to.eql(true);",
							"    pm.expect(jsonData.success).to.eql(true);",
							"});",
							"",
							"",
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"testIDTour\", jsonData.response.updatedid);",
							""
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{AccessJWT}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "X-API-Key",
						"value": "{{APIKey}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"label\": \"Edited\",\n\t\"insuranceprice\": 1000,\n\t\"reservationfeeprice\": 1000,\n\t\"departuredate\": \"2018-02-02\",\n\t\"categories\": [\n\t\t\t{\n\t\t\t\t\"id\": \"{{testIDCategory2}}\"\n\t\t\t}\n\t\t],\n\t\"rooms\": [\n\t\t{\n\t\t\t\"label\": \"EditedRoom\",\n\t\t\t\"price\": 1000,\n\t\t\t\"size\": 10,\n\t\t\t\"numberavaliable\": 100\n\t\t},\n\t\t{\n\t\t\t\"label\": \"EditedRoom2\",\n\t\t\t\"price\": 2000,\n\t\t\t\"size\": 20,\n\t\t\t\"numberavaliable\": 200\n\t\t}\n\t\t]\n}"
				},
				"url": {
					"raw": "{{BaseURL}}tours/{{testIDTour}}",
					"host": [
						"{{BaseURL}}tours"
					],
					"path": [
						"{{testIDTour}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "categories Delete AnotherCategory Test",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "10c3d648-40cd-41c1-8f33-8e5ada1e0336",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "7f7eba23-1364-41c5-a28b-373ff4a366ab",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200 and json body exists\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.json;",
							"    pm.response.to.be.withBody;",
							"});",
							"",
							"var schema = {",
							"\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
							"\"type\" : \"object\",",
							"  \"properties\": {",
							"    \"login\": { ",
							"        \"type\": \"boolean\",",
							"        \"enum\": [true]",
							"    },",
							"    \"success\": { ",
							"        \"type\": \"boolean\",",
							"        \"enum\": [true]",
							"    },",
							"    \"response\": { ",
							"        \"type\": \"object\",",
							"        \"required\": [ \"updatedid\"],",
							"        \"properties\": {",
							"            \"updatedid\": {",
							"                \"type\": \"number\"",
							"            }",
							"        }",
							"    }",
							"},",
							"\"required\": [ \"login\", \"success\", \"response\"]",
							"};",
							"",
							"var jsonData = pm.response.json();",
							"",
							"pm.test('Schema is valid', function() {",
							"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{AccessJWT}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "X-API-Key",
						"value": "{{APIKey}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{BaseURL}}categories/{{testIDCategory}}",
					"host": [
						"{{BaseURL}}categories"
					],
					"path": [
						"{{testIDCategory}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "categories CategoryWasDeleted",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "10c3d648-40cd-41c1-8f33-8e5ada1e0336",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "7d5ab9bd-efa3-4a39-bf1d-c6416999bebd",
						"exec": [
							"pm.test(\"Status code is 200 and json body exists\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.json;",
							"    pm.response.to.be.withBody;",
							"});",
							"",
							"var schema = {",
							"\"$schema\": \"http://json-schema.org/draft-04/schema#\",",
							"\"type\" : \"object\",",
							"  \"properties\": {",
							"    \"login\": { ",
							"        \"type\": \"boolean\",",
							"        \"enum\": [true]",
							"    },",
							"    \"success\": { ",
							"        \"type\": \"boolean\",",
							"        \"enum\": [true]",
							"    },",
							"    \"response\": { ",
							"        \"type\": \"object\",",
							"        \"required\": [ \"categories\"],",
							"        \"properties\": {",
							"            \"categories\": {",
							"                \"type\": \"array\"",
							"            }",
							"        }",
							"    }",
							"},",
							"\"required\": [ \"login\", \"success\", \"response\"]",
							"};",
							"",
							"var jsonData = pm.response.json();",
							"",
							"pm.test('Schema is valid', function() {",
							"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{AccessJWT}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "X-API-Key",
						"value": "{{APIKey}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{BaseURL}}categories?showDeleted=true",
					"host": [
						"{{BaseURL}}categories"
					],
					"query": [
						{
							"key": "showDeleted",
							"value": "true"
						}
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer"
	}
}